<?php
/**
 * Theme functions.
 * @package minimalMuk
 * @since minimalMuk 1.1.1
 */

// register the theme translation
load_theme_textdomain( 'minimalmuk', get_template_directory() . '/languages' );

// Add default posts and comments RSS feed links to head
add_theme_support( 'automatic-feed-links' );

// This theme uses wp_nav_menu() in one location.
register_nav_menus( array(
  'primary' => __( 'Primary Navigation', 'minimalmuk' ),
));

// Register Sidebar Widget Area
function minimalmuk_widgets_init() {
  register_sidebar( array(
    'name' => __( 'Primary Widget Area', 'minimalmuk' ),
    'id' => 'primary-widget-area',
    'description' => __( 'The primary widget area', 'minimalmuk' ),
    'before_widget' => '<li id="%1$s" class="widget-container %2$s">',
    'after_widget' => '</li>',
    'before_title' => '<h3 class="widget-title">',
    'after_title' => '</h3>',
  ) );
}
add_action( 'widgets_init', 'minimalmuk_widgets_init' );

// Custom header
add_theme_support( 'custom-header', array(
  // Header image default
  'default-image'     => get_template_directory_uri() . '/images/default-header.jpg',
  // Header width
  'width'               => 960,
  // Header height
  'height'              => 200,
  // Header text display default
  'header-text'     => true,
  // Header text color default
  'default-text-color'    => '',
  // Header image random rotation default
  'random-default'    => false,
  // Template header style callback
  'wp-head-callback'    => 'minimalmuk_header_style',
) );

function minimalmuk_header_style() {
  $header_image = get_header_image();
  $text_color   = get_header_textcolor();

// If no custom options for text are set, let's bail.
  if ( empty( $header_image ) && $text_color == get_theme_support( 'custom-header', 'default-text-color' ) )
    return;

  // If we get this far, we have custom styles.
  ?>
 <style type="text/css" id="header-css">

  <?php
    if ( ! empty( $header_image ) ) :
  ?>
.site-header {
      /* Get the header dimensions from above to dynamically fill size values */
      <?php $theme_values = (get_theme_support( 'custom-header' )); ?>
      background: url(<?php header_image(); ?>) no-repeat scroll top;
      background-size: <?php echo $theme_values[0]['width']; ?>px auto;
      min-height: <?php echo $theme_values[0]['height']; ?>px;
    }
  <?php
    endif;

    // Has the text been hidden?
    if ( ! display_header_text() ) :
  ?>
    .site-title,
    .site-description {
      position: absolute;
      clip: rect(1px 1px 1px 1px); /* IE7 */
      clip: rect(1px, 1px, 1px, 1px);
    }
  <?php
      if ( empty( $header_image ) ) :
  ?>
    .site-header .home-link {
      min-height: 0;
    }
  <?php
      endif;

    // If the user has set a custom color for the text, use that.
    elseif ( $text_color != get_theme_support( 'custom-header', 'default-text-color' ) ) :
  ?>
    .site-title,
    .site-description {
      color: #<?php echo esc_attr( $text_color ); ?>;
    }
  <?php endif; ?>
  </style>
  <?php
}

// Cleanup WP head
function minimalmuk_head_cleanup() {
  // http://wpengineer.com/1438/wordpress-header/
  //remove_action('wp_head', 'feed_links', 2);
  //remove_action('wp_head', 'feed_links_extra', 3);
  remove_action('wp_head', 'rsd_link');
  remove_action('wp_head', 'wlwmanifest_link');
  remove_action('wp_head', 'index_rel_link');
  remove_action('wp_head', 'parent_post_rel_link', 10, 0);
  remove_action('wp_head', 'start_post_rel_link', 10, 0);
  remove_action('wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0);
  remove_action('wp_head', 'wp_generator');
  remove_action('wp_head', 'wp_shortlink_wp_head', 10, 0);
  remove_action('wp_head', 'noindex', 1);
  remove_action('wp_head', 'rel_canonical');

  // deregister l10n.js
  if (!is_admin()) {
    wp_deregister_script('l10n');
  }
}
add_action('init', 'minimalmuk_head_cleanup');

// Cleanup WP Dashboard
function minimalmuk_remove_dashboard_widgets() {
  remove_meta_box('dashboard_incoming_links', 'dashboard', 'normal');
  remove_meta_box('dashboard_plugins', 'dashboard', 'normal');
  remove_meta_box('dashboard_primary', 'dashboard', 'normal');
  remove_meta_box('dashboard_secondary', 'dashboard', 'normal');
}
add_action('admin_init', 'minimalmuk_remove_dashboard_widgets');

/**
 * Makes some changes to the <title> tag, by filtering the output of wp_title().
 *
 * If we have a site description and we're viewing the home page or a blog posts
 * page (when using a static front page), then we will add the site description.
 *
 * If we're viewing a search result, then we're going to recreate the title entirely.
 * We're going to add page numbers to all titles as well, to the middle of a search
 * result title and the end of all other titles.
 *
 * The site title also gets added to all titles.
 *
 * @since minimalMuk 1.1.1
 *
 * @param string $title Title generated by wp_title()
 * @param string $separator The separator passed to wp_title(). minimalMuk uses a
 *  vertical bar, "|", as a separator in header.php.
 * @return string The new title, ready for the <title> tag.
 */
function minimalmuk_filter_wp_title( $title, $separator ) {
  // Don't affect wp_title() calls in feeds.
  if ( is_feed() )
    return $title;

  // The $paged global variable contains the page number of a listing of posts.
  // The $page global variable contains the page number of a single post that is paged.
  // We'll display whichever one applies, if we're not looking at the first page.
  global $paged, $page;

  if ( is_search() ) {
    // If we're a search, let's start over:
    $title = sprintf( __( 'Search results for %s', 'minimalmuk' ), '"' . get_search_query() . '"' );
    // Add a page number if we're on page 2 or more:
    if ( $paged >= 2 )
      $title .= " $separator " . sprintf( __( 'Page %s', 'minimalmuk' ), $paged );
    // Add the site name to the end:
    $title .= " $separator " . get_bloginfo( 'name', 'display' );
    // We're done. Let's send the new title back to wp_title():
    return $title;
  }

  // Otherwise, let's start by adding the site name to the end:
  $title .= get_bloginfo( 'name', 'display' );

  // If we have a site description and we're on the home/front page, add the description:
  $site_description = get_bloginfo( 'description', 'display' );
  if ( $site_description && ( is_home() || is_front_page() ) )
    $title .= " $separator " . $site_description;

  // Add a page number if necessary:
  if ( $paged >= 2 || $page >= 2 )
    $title .= " $separator " . sprintf( __( 'Page %s', 'minimalmuk' ), max( $paged, $page ) );

  // Return the new title to wp_title():
  return $title;
}
add_filter( 'wp_title', 'minimalmuk_filter_wp_title', 10, 2 );

/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 *
 * To override this in a child theme, remove the filter and optionally add
 * your own function tied to the wp_page_menu_args filter hook.
 *
 * @since minimalMuk 1.1.1
 */
function minimalmuk_page_menu_args( $args ) {
  $args['show_home'] = true;
  return $args;
}
add_filter( 'wp_page_menu_args', 'minimalmuk_page_menu_args' );


if ( ! function_exists( 'minimalmuk_comment' ) ) :
/**
 * Template for comments and pingbacks.
 *
 * To override this walker in a child theme without modifying the comments template
 * simply create your own minimalmuk_comment(), and that function will be used instead.
 *
 * Used as a callback by wp_list_comments() for displaying the comments.
 *
 * @since minimalMuk 1.1.1
 */
function minimalmuk_comment( $comment, $args, $depth ) {
  $GLOBALS['comment'] = $comment;
  switch ( $comment->comment_type ) :
    case '' :
  ?>
  <li <?php comment_class(); ?> id="li-comment-<?php comment_ID(); ?>">
    <div id="comment-<?php comment_ID(); ?>">
    <div class="comment-author vcard">
      <?php echo get_avatar( $comment, 40 ); ?>
      <?php printf( __( '%s <span class="says">says:</span>', 'minimalmuk' ), sprintf( '<cite class="fn">%s</cite>', get_comment_author_link() ) ); ?>
    </div><!-- .comment-author .vcard -->
    <?php if ( $comment->comment_approved == '0' ) : ?>
      <em><?php _e( 'Your comment is awaiting moderation.', 'minimalmuk' ); ?></em>
      <br />
    <?php endif; ?>

    <div class="comment-meta commentmetadata"><a href="<?php echo esc_url( get_comment_link( $comment->comment_ID ) ); ?>">
      <?php
        /* translators: 1: date, 2: time */
        printf( __( '%1$s at %2$s', 'minimalmuk' ), get_comment_date(),  get_comment_time() ); ?></a><?php edit_comment_link( __( '(Edit)', 'minimalmuk' ), ' ' );
      ?>
    </div><!-- .comment-meta .commentmetadata -->

    <div class="comment-body"><?php comment_text(); ?></div>

    <div class="reply">
      <?php comment_reply_link( array_merge( $args, array( 'depth' => $depth, 'max_depth' => $args['max_depth'] ) ) ); ?>
    </div><!-- .reply -->
  </div><!-- #comment-##  -->

  <?php
      break;
    case 'pingback'  :
    case 'trackback' :
  ?>
  <li class="post pingback">
    <p><?php _e( 'Pingback:', 'minimalmuk' ); ?> <?php comment_author_link(); ?><?php edit_comment_link( __('(Edit)', 'minimalmuk'), ' ' ); ?></p>
  <?php
      break;
  endswitch;
}
endif;
